import time
from CSP import csp
from Backtrack import *
"""
board = ["7,8,0,4,0,0,1,2,0,6,0,0,0,7,5,0,0,9,0,0,0,6,0,1,0,7,8,0,0,7,0,4,0,2,6,0,0,0,1,0,5,0,9,3,0,9,0,4,0,6,0,0,0,5,0,7,0,3,0,0,0,1,2,1,2,0,0,0,7,4,0,0,0,4,9,2,0,6,0,0,7"]
grid= [[7,8,0,4,0,0,1,2,0],
          [6,0,0,0,7,5,0,0,9], 
          [0,0,0,6,0,1,0,7,8], 
          [0,0,7,0,4,0,2,6,0], 
          [0,0,1,0,5,0,9,3,0], 
          [9,0,4,0,6,0,0,0,5], 
          [0,7,0,3,0,0,0,1,2], 
          [1,2,0,0,0,7,4,0,0], 
          [0,4,9,2,0,6,0,0,7]]

"""

#Easy

board = ["0,0,0,0,0,4,0,9,0,8,0,2,9,7,0,0,0,0,9,0,1,2,0,0,3,0,0,0,0,0,0,4,9,1,5,7,0,1,3,0,5,0,9,2,0,5,7,9,1,2,0,0,0,0,0,0,7,0,0,2,6,0,3,0,0,0,0,3,8,2,0,5,0,2,0,5,0,0,0,0,0"]
grid= [[0,0,0,0,0,4,0,9,0],
          [8,0,2,9,7,0,0,0,0], 
          [9,0,1,2,0,0,3,0,0], 
          [0,0,0,0,4,9,1,5,7], 
          [0,1,3,0,5,0,9,2,0], 
          [5,7,9,1,2,0,0,0,0], 
          [0,0,7,0,0,2,6,0,3], 
          [0,0,0,0,3,8,2,0,5], 
          [0,2,0,5,0,0,0,0,0]]

#hard
"""
board = ["0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,9,4,0,0,0,3,0,0,0,0,0,5,0,9,2,3,0,5,0,7,4,8,4,0,0,0,0,0,0,0,0,6,7,0,9,8,0,0,0,0,0,0,7,0,6,0,0,0,0,0,0,9,0,0,0,2,0,4,0,8,5,0,0,3,6,0"]
grid=[[0,0,0,0,0,0,0,0,2],
        [0,0,0,0,0,0,9,4,0],
        [0,0,3,0,0,0,0,0,5],
        [0,9,2,3,0,5,0,7,4],
        [8,4,0,0,0,0,0,0,0], 
        [0,6,7,0,9,8,0,0,0], 
        [0,0,0,7,0,6,0,0,0],
        [0,0,0,9,0,0,0,2,0], 
        [4,0,8,5,0,0,3,6,0]]
"""

print("------Original Board-----")
print()

def print_grid(arr): 
    for i in range(9):
        for j in range(9):	
            print ("|",arr[i][j],end=' ')
        print (end="\n")

print_grid(grid)
print()
print("----------Solved Sudoku-----------")
print()
def listTostring(bo):
	g=""
	bo.replace(" ", "")
	string = bo.replace('"', '').replace("'", '')
	
	for i in string:
		g=g+i
	return g

lst=str(board)
lst=lst.strip("[").strip("]").split(",")
lst = "".join(lst)

grid=listTostring(lst)
assert len(grid) == 81

start = time.time()
sudoku = csp(grid=grid)
solved = Backtracking_Search(sudoku)

if solved!="FAILURE":
	display(solved)
	print ("This puzzle was solved in: ", "%.4f " %(time.time()-start),"seconds")
	print ("Hola:) PUZZLE SOLVED...!!!")
else:
	print ("OOPS:(!! stuck somewhere")


